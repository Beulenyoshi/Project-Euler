=begin

p2_evenFibonacci.rb

Project Euler Problem 2

Copyright 2017 Thomas Johannesmeyer

Licensed under the "THE BEER-WARE LICENSE" (Revision 42):
Thomas Johannesmeyer wrote this file. As long as you retain this notice you
can do whatever you want with this stuff. If we meet some day, and you think
this stuff is worth it, you can buy me a beer or coffee in return


Each new term in the Fibonacci sequence is generated by adding the
previous two terms. By starting with 1 and 2, the first 10 terms will be:

1, 2, 3, 5, 8, 13, 21, 34, 55, 89, ...

By considering the terms in the Fibonacci sequence whose values do
not exceed four million, find the sum of the even-valued terms.

=end


def fib_recursive(n)
  # Recursive Fibonacci implementation for reference and some tests
  if (n == 0)
    # n = 0 > 0
    return 0
  elsif ((n == 1) or (n == 2))
    # n = 1,2 > 1
    return 1
  else
    return fib_recursive(n-1) + fib_recursive(n-2)
  end
end

# Naive and frankly stupid solution:
=begin 
     n fibCount = 10
     n sum = 0
     n (0..fibCount).each do |n|
     n   puts fib_recursive(n).to_s
     n   currentFib = fib_recursive(n)
     n   sum += (currentFib % 2 == 0) ? currentFib : 0
     n end
     n
     n puts "Sum of all even Fibonnaci numbers is: #{sum}"
     n
=end


# Now once more (with feeling):

def sum_of_even_fibs_up_to_index(n)
# returns sum of even terms up to number index
  lastFib = 0
  fib     = 1
  sum     = 0

  (0...n).each do |x|
    tempFib = lastFib + fib
    lastFib = fib
    fib     = tempFib

    # puts fib.to_s # Debugging
    if (tempFib % 2 == 0)
      sum += tempFib
    end
  end
  sum
end

def sum_of_even_fibs_up_to_size(n)
# returns sum of even terms up to number of size n
  lastFib = 0
  fib     = 1
  sum     = 0

  while fib < n do
    tempFib = lastFib + fib
    lastFib = fib
    fib     = tempFib

    # puts fib.to_s # Debugging
    if (tempFib % 2 == 0)
      sum += tempFib
    end
  end
  sum
end

puts "Sum of even fibs up to index: #{sum_of_even_fibs_up_to_index(10)}"
puts "Sum of even fibs up to size: #{sum_of_even_fibs_up_to_size(4000000)}"
